sudo: required
services:
  - docker

#  Build a test version of our client project. 

#  We only have tests in /client directory (React), but 
#  tests for /server and /worker can be added, too.
#  To build a test version of our project, we use the .dev version of Dockerfile, 
#  because only the .dev file has all the dependencies attached in order to run the tests.
#  The production version of Dockerfile builds the image and then copies just the raw 
#  version of our production assets.
#  The context of tests is ./client (relative to this file)
before_install:
  - docker build -t 7676ee/react-test -f ./client/Dockerfile.dev ./client

# Test scripts
# -- --coverage will ensure that the tests will exit (no server "listening")
script:
  - docker run 7676ee/react-test npm run test -- --coverage

after_success:
  # build production versions of our sub-projects: client, worker, server, nginx
  # No need to specify Dockerfile, it will use the Dockerfile in the directory.
  - docker build -t 7676ee/multi-client ./client
  - docker build -t 7676ee/multi-nginx ./nginx
  - docker build -t 7676ee/multi-server ./server
  - docker build -t 7676ee/multi-worker ./worker

  # Log in to docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin 
  #  Take these images and push them to Docker Hub.
  - docker push 7676ee/multi-client
  - docker push 7676ee/multi-nginx
  - docker push 7676ee/multi-server
  - docker push 7676ee/multi-worker



# deploy:
#   provider: elasticbeanstalk
#   region: "us-east-2"
#   app: "docker-basic-nginx"
#   env: "DockerBasicNginx-env"
#   bucket_name: "elasticbeanstalk-us-east-2-421718756082"
#   bucket_path: "docker-basic-nginx"
#   on:
#     branch: master
#   access_key_id: $AWS_ACCESS_KEY
#   secret_access_key: 
#     secure: "$AWS_SECRET_KEY"